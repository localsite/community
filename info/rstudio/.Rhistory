setwd("~/Desktop/CP 8853/final project/data")
setwd("/Users/eloncha/Desktop/2020SPRING/CP 8853/final project/data")
library(tidyverse)
library(car)
library(readr)
library(tmap)
library(sf)
state = st_read('TIGER/tl_2019_us_state/tl_2019_us_state.shp') %>% filter(NAME =='Georgia')
county2 = st_read('TIGER/Counties_Georgia/Counties_Georgia.shp')
View(county2)
require(car)
require(car=TRUE)
is.installed(car)
is.element(car,installed.packages()[,1])
if(!require(car,character.only = TRUE))
)
!require(car,character.only = TRUE)
!require('car',character.only = TRUE)
for (package in c('sf','tmap','readr','tidyverse')) {
if (!require(package,character.only = TRUE)) {
install.packages(package)
library(package)
}
}
county = st_read('TIGER/tl_2019_us_county/tl_2019_us_county.shp') %>% filter(STATEFP == 13) %>% mutate(GEOID = as.character(GEOID))
View(county)
View(county2)
# working directory, make sure it is in accordance with the actual directory where shapefile is located in your local machine
setwd("/Users/eloncha/Documents/GitHub/community/info/rstudio")
tmap_mode('view')
county = st_read('shapefile/Counties_Georgia/Counties_Georgia.shp')
county = st_read('shapefile/Counties_Georgia/Counties_Georgia.shp')
View(county)
#show a map
tm_shape(county) + tm_polygons()
#show a map
tm_shape(county) + tm_polygons(col = 'totpop10')
st_is_valid(county)
#get centroid
centroid = st_centroid(county)
View(centroid)
tm_shape(county) + tm_polygons(col = 'totpop10') +
tm_shape(centroid) + tm_dots()
centroid['geometry']
centroid$geometry
centroid$geometry[0][0]
centroid$geometry[0]
centroid['geometry'][0]
centroid['geometry']
centroid[0]
centroid[0]
centroid[0,:]
View(centroid)
centroid['geometry']
centroid$geometry
centroid$geometry[0]
centroid$geometry[1]
centroid$geometry[1]['xmin']
centroid$geometry[1]
str(centroid$geometry)
str(centroid$geometry[1])
str(centroid$geometry[1])[2]
st_coordinates(centroid)
coord = st_coordinates(centroid)
centroid = cbind(centroid, coord)
coord = as.data.frame(st_coordinates(centroid), colnames = c('lat','lon'))
View(coord)
coord = as.data.frame(st_coordinates(centroid), col.names = c('lat','lon'))
View(coord)
coord = as.data.frame(st_coordinates(centroid), col.names = c('lat','lon'))
View(coord)
?as.data.frame
coord = as.data.frame(st_coordinates(centroid))
colnames(coord) = c('lat','lon')
View(coord)
#get centroid
centroid = st_centroid(county)
centroid = cbind(centroid, coord)
#get centroid
centroid = st_centroid(county)
coord = as.data.frame(st_coordinates(centroid))
View(coord)
centroid = cbind(centroid, coord)
View(centroid)
View(centroid)
#get centroid
centroid = st_centroid(county)
View(centroid)
centroid = centroid %>% select(:-2)
centroid[,:-2]
centroid[1,1]
centroid[,1:20]
centroid[,1:19]
View(coord)
coord = as.data.frame(st_coordinates(centroid))
colnames(coord) = c('lat','lon')
View(coord)
centroid = centroid %>% st_drop_geometry(.) %>% cbind(.,coord)
write.csv(centroid,'GAcounties.csv')
